{"version":3,"sources":["components/DisplayWeather.js","components/Navbar.js","App.js","index.js"],"names":["DisplayWeather","props","weatherData","temperature","description","location","region","country","wind_speed","pressure","precip","humidity","img","className","src","alt","Navbar","onSubmit","e","changeWeather","placeholder","onChange","changeRegion","target","value","App","state","coords","latitude","longitude","data","inputData","change","setState","events","preventDefault","Axios","get","then","res","name","current","weather_descriptions","weather_icons","navigator","geolocation","getCurrentPosition","postion","newCoords","console","log","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.344498d7.chunk.js","sourcesContent":["import React from 'react'\n\nfunction DisplayWeather(props) {\n    const { temperature, description, location, region, country, wind_speed, pressure, precip, humidity, img } = props.weatherData;\n\n    return (\n        <div className=\"user-weather\">\n            <div className=\"row\">\n                <div className=\"col-md-3 weather-temp\">\n                    <h1>{temperature}<sup>o</sup>C , {description}</h1>\n                    <h4>{location}</h4>\n                    <p>{region} , {country}</p>\n                </div>\n\n                <div className=\"col-md-9\">\n                    <img className=\"mainImg\" src={img} alt=\"weather-img\" />\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-md-3 weather-info\">\n                    <p><b>Wind Speed</b>(km/hr)</p>\n                    <h2>{wind_speed}</h2>\n                </div>\n\n                <div className=\"col-md-3 weather-info\">\n                    <p><b>Preassure</b>(millibar)</p>\n                    <h2>{pressure}</h2>\n                </div>\n\n                <div className=\"col-md-3 weather-info\">\n                    <p><b>Precipitation</b>(mm)</p>\n                    <h2>{precip}</h2>\n                </div>\n\n                <div className=\"col-md-3 weather-info\">\n                    <p><b>Humidity</b>(%)</p>\n                    <h2>{humidity}</h2>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default DisplayWeather\n","import React  from 'react'\n\nconst Navbar = (props) => {\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-6\">\n            <h1 className=\"title\">Weather App</h1>\n            </div>\n\n            <div className=\"col-md-6\">\n                <form className=\"region\" onSubmit={(e)=>{props.changeWeather(e)}}>\n                    <input className=\"regioninput\"   placeholder=\"Enter Location\" onChange={(e)=>{props.changeRegion(e.target.value)}}/>\n                </form>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react';\nimport Axios from 'axios';\nimport DisplayWeather from './components/DisplayWeather'\nimport Navbar from './components/Navbar'\nimport './App.css';\n\nclass App extends React.Component {\n\n  state={\n    coords:{\n      latitude:45,\n      longitude:60\n    },\n    data: {},\n    inputData:\"\"\n  }\n\n  componentDidMount(){\n    if(navigator.geolocation){\n      navigator.geolocation.getCurrentPosition((postion)=>{\n        let newCoords = {\n          latitude:postion.coords.latitude,\n          longitude:postion.coords.longitude\n        }\n        this.setState({coords:newCoords});\n        //API CALL\n        Axios.get(`http://api.weatherstack.com/current?access_key=081aec728b3ed927753c3102419894ad&query=${this.state.coords.latitude},${this.state.coords.longitude}`).then(res =>{\n        \n          let weatherData = {\n            location:res.data.location.name,\n            temperature:res.data.current.temperature,\n            description:res.data.current.weather_descriptions,\n            region:res.data.location.region,\n            country:res.data.location.country,\n            wind_speed:res.data.current.wind_speed,\n            pressure:res.data.current.pressure,\n            precip:res.data.current.precip,\n            humidity:res.data.current.humidity,\n            img:res.data.current.weather_icons\n          }\n\n            this.setState({data:weatherData});\n\n        });\n      })\n    }\n    else{\n      console.log(\"did'nt get the location\");\n    }\n  }\n\n  //track input data\nchange=(value)=>{\n  this.setState({inputData:value})\n}\n\nchangeWeather=(events)=>{\n  events.preventDefault();\n\n  Axios.get(`http://api.weatherstack.com/current?access_key=081aec728b3ed927753c3102419894ad&query=${this.state.inputData}`).then(res=>{\n    let weatherData = {\n      location:res.data.location.name,\n      temperature:res.data.current.temperature,\n      description:res.data.current.weather_descriptions,\n      region:res.data.location.region,\n      country:res.data.location.country,\n      wind_speed:res.data.current.wind_speed,\n      pressure:res.data.current.pressure,\n      precip:res.data.current.precip,\n      humidity:res.data.current.humidity,\n      img:res.data.current.weather_icons\n    }\n\n      this.setState({data:weatherData});\n\n  });\n}\n\n\n\n\n  render(){\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Navbar changeWeather={this.changeWeather} changeRegion={this.change}/>\n      <DisplayWeather weatherData={this.state.data}/>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}